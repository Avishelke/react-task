{"version":3,"sources":["services/API.js","screen/login/login.js","screen/home/home.js","App.js","serviceWorker.js","index.js"],"names":["axios","require","login","user","get","concat","search","searchValue","Login","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onInputChange","event","setState","defineProperty","target","name","value","submit","e","preventDefault","btnDisabled","isError","_this$state","state","username","password","API","then","res","data","results","birth_year","localStorage","setItem","isLoggedIn","catch","err","_this$state2","react_default","a","createElement","react_router","to","className","onSubmit","type","onChange","placeholder","required","disabled","Component","Home","page","query","showLoader","count","length","filterData","sort","b","population","logout","removeItem","naviateToDetail","item","selectedPlanet","onOpenModal","handleKeyPress","key","showModal","onCloseModal","getItem","_this2","style","margin","onKeyPress","onClick","color","cursor","fontSize","fontWeight","marginLeft","map","index","url","index_es","open","onClose","marginTop","width","div","climate","diameter","gravity","orbital_period","rotation_period","surface_water","terrain","back","padding","history","createBrowserHistory","App","react_router_dom","forceRefresh","basename","process","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3ba7aaf2.chunk.js","sourcesContent":["const axios = require('axios');\r\n\r\nconst baseURL = 'https://swapi.co/api';\r\n\r\nexport const login = (user) =>\r\n  axios.get(baseURL + `/people/?search=${user}`)\r\n\r\nexport const search = (searchValue) =>\r\n  axios.get(baseURL + `/planets?search=${searchValue}`)\r\n","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport './style.css';\r\nimport * as API from '../../services/API';\r\n\r\nclass Login extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            isLoggedIn: false,\r\n            isError: false,\r\n            btnDisabled: false\r\n        }\r\n    }\r\n\r\n    onInputChange = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n\r\n    submit = (e) => {\r\n        e.preventDefault();\r\n        this.setState({ btnDisabled: true, isError: false });\r\n        const { username, password } = this.state;\r\n\r\n        API.login(username)\r\n            .then(res => {\r\n                const data = res.data.results[0];\r\n                if (data && data.name === username && data.birth_year === password) {\r\n                    localStorage.setItem('isLoggedIn', true);\r\n                    this.setState({ isLoggedIn: true, btnDisabled: true });\r\n                } else {\r\n                    this.setState({ isError: true, btnDisabled: false });\r\n                }\r\n            }).catch(err => {\r\n                this.setState({ btnDisabled: false })\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const { username, password, isLoggedIn, isError, btnDisabled } = this.state;\r\n\r\n        if (isLoggedIn) {\r\n            return <Redirect to=\"/\" />\r\n        }\r\n\r\n        return (\r\n            <div className=\"login-form\">\r\n                <form onSubmit={this.submit}>\r\n                    <h2 className=\"text-center\">Log in</h2>\r\n                    {isError && <label className=\"error\">Invalid username or password.</label>}\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" name=\"username\" value={username} onChange={this.onInputChange} className=\"form-control\" placeholder=\"Username\" required=\"required\" />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"password\" name=\"password\" value={password} onChange={this.onInputChange} className=\"form-control\" placeholder=\"Password\" required=\"required\" />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <button type=\"submit\" className=\"btn btn-primary btn-block\" disabled={btnDisabled}>\r\n                            {btnDisabled ? 'Logging...' : 'Log in'}</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Modal from \"react-responsive-modal\";\r\n\r\nimport * as API from '../../services/API';\r\n\r\n\r\nclass Home extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            isLoggedIn: true,\r\n            showLoader: false,\r\n            logout: false,\r\n            query: '',\r\n            data: [],\r\n            page: 1,\r\n            showModal: false,\r\n            selectedPlanet: {}\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let isLoggedIn = localStorage.getItem('isLoggedIn');\r\n        if (isLoggedIn) {\r\n            this.setState({ isLoggedIn: true })\r\n        } else {\r\n            this.setState({ isLoggedIn: false })\r\n        }\r\n    }\r\n\r\n    search = (page) => {\r\n        let searchValue = this.state.query;\r\n        if (page) {\r\n            searchValue = searchValue + `&page=${page}`\r\n        }\r\n        if (searchValue) {\r\n            API.search(searchValue)\r\n                .then(res => {\r\n                    let data = res.data.results;\r\n                    data = this.state.data.concat(data);\r\n                    this.setState({ data: data, showLoader: true }, () => {\r\n                        if (res.data.count > this.state.data.length) {\r\n                            this.setState({ page: this.state.page + 1 }, () => {\r\n                                this.search(this.state.page)\r\n                            })\r\n                        } else {\r\n                            let filterData = data.sort((a, b) => (b.population - a.population) ? 1 : ((a.population - b.population) ? -1 : 0));\r\n                            this.setState({ data: filterData, showLoader: false });\r\n                        }\r\n                    });\r\n                })\r\n        }\r\n    }\r\n\r\n    logout = () => {\r\n        localStorage.removeItem('isLoggedIn');\r\n        this.setState({ logout: true })\r\n    }\r\n\r\n    naviateToDetail = (item) => {\r\n        this.setState({ selectedPlanet: item })\r\n        this.onOpenModal();\r\n    }\r\n\r\n    onInputChange = (event) => {\r\n        this.setState({ query: event.target.value, data: [], page: 1 }, () => {\r\n            if (this.state.query.length == 0) {\r\n                this.search();\r\n            }\r\n        });\r\n    }\r\n\r\n    handleKeyPress = (event) => {\r\n        if (event.key === 'Enter') {\r\n            this.search();\r\n        }\r\n    }\r\n\r\n    onOpenModal = () => {\r\n        this.setState({ showModal: true });\r\n    };\r\n\r\n    onCloseModal = () => {\r\n        this.setState({ showModal: false });\r\n    };\r\n\r\n    render() {\r\n        const { showLoader, isLoggedIn, data, logout, showModal, selectedPlanet } = this.state;\r\n\r\n        if (logout || !isLoggedIn) {\r\n            return <Redirect to=\"/login\" />\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                    <nav className=\"navbar navbar-inverse\" style={{ margin: `20px auto` }}>\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"navbar-header\"></div>\r\n                            <ul className=\"nav navbar-nav\">\r\n                                <div>\r\n                                    <input type=\"text\" placeholder=\"Search Planet....\" name=\"search\"\r\n                                        onChange={this.onInputChange}\r\n                                        onKeyPress={this.handleKeyPress}\r\n                                    />\r\n                                    <button type=\"submit\" onClick={() => this.search('')}>&#128269;</button>\r\n                                </div>\r\n                            </ul>\r\n                            <ul className=\"nav navbar-nav navbar-right\">\r\n                                <li><a style={{ color: 'blue', cursor: 'pointer' }} onClick={this.logout}><span className=\"glyphicon glyphicon-log-in\"></span> Logout</a></li>\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                    {data.length > 0 && <div style={{ margin: 10, fontSize: 18, fontWeight: 500 }}>Sr <span style={{ marginLeft: 20 }}>Name</span><span className=\"right\">Population</span></div>}\r\n                    {data.map((item, index) => {\r\n                        return <div key={item.url} onClick={() => this.naviateToDetail(item)} className=\"card\">\r\n                            <div>{index + 1} : {item.name} <span className=\"right\">{item.population}</span></div>\r\n                        </div>\r\n                    })}\r\n                    {showLoader && <div>Loading more data...</div>}\r\n                    <div className=\"container\">\r\n                        <Modal open={showModal} onClose={this.onCloseModal} style={{ marginTop: 100 }}>\r\n                            <div style={{ width: 400 }}>\r\n                                <h2>Planet Detail:</h2>\r\n                                <div style={style.div}>Name: <span style={style.fontWeight}>{selectedPlanet.name}</span></div>\r\n                                <div style={style.div}>Population: <span style={style.fontWeight}>{selectedPlanet.population}</span></div>\r\n                                <div style={style.div}>Climate: <span style={style.fontWeight}>{selectedPlanet.climate}</span></div>\r\n                                <div style={style.div}>Diameter: <span style={style.fontWeight}>{selectedPlanet.diameter}</span></div>\r\n                                <div style={style.div}>Gravity: <span style={style.fontWeight}>{selectedPlanet.gravity}</span></div>\r\n                                <div style={style.div}>Orbital Period: <span style={style.fontWeight}>{selectedPlanet.orbital_period}</span></div>\r\n                                <div style={style.div}>Rotation Period: <span style={style.fontWeight}>{selectedPlanet.rotation_period}</span></div>\r\n                                <div style={style.div}>Surface Water: <span style={style.fontWeight}>{selectedPlanet.surface_water}</span></div>\r\n                                <div style={style.div}>Terrain: <span style={style.fontWeight}>{selectedPlanet.terrain}</span></div>\r\n                                <div style={style.div}>Url: <span style={style.fontWeight}>{selectedPlanet.url}</span></div>\r\n                            </div>\r\n                        </Modal>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n\r\nconst style = {\r\n    back: {\r\n        color: 'blue', cursor: 'pointer', margin: 30, marginLeft: 0\r\n    },\r\n\r\n    div: {\r\n        fontWeight: 'bold', padding: `10px 10px 0px 0px`\r\n    },\r\n    fontWeight: {\r\n        fontWeight: 400\r\n    }\r\n}","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport Login from '../src/screen/login/login';\nimport Home from './screen/home/home';\nconst history = createBrowserHistory();\n\nfunction App() {\n  return (\n    <Router history={history}  forceRefresh={false} basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/login\" component={Login} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}